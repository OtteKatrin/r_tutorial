)
str(map_dat)
str(world_coordinates)
world_coordinates$region
str(winners_continents)
winners_continents %>%
table()
winners_continents %>%
table
winners_continents$Nationality %>%
table
winners_counts <- winners_continents$Nationality %>%
table
str(winners_counts)
world_coordinates <- map_data("world")
str(world_coordinates)
winners_continents$Nationality %>%
table %>%
as.data.frame()
winners_counts <- winners_continents$Nationality %>%
table %>%
as.data.frame()
str(winners_counts)
colnames(winners_counts) <- c("region", "freq")
winners_world <- merge(winners_counts, world_coordinates, all.y = TRUE)
str(winners_world)
plain <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)
)
worldHDI <- ggplot(data = winners_world,
mapping = aes(x = long, y = lat, group = group))
world_marathon <- ggplot(data = winners_world,
mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = freq))
world_marathon
ggplot(data = winners_world,
mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = freq)) +
scale_fill_distiller(palette ="RdBu", direction = -1)
ggplot(data = winners_world,
mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = freq)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Global Human Development Index (HDI)") +
plain
worldplot <- ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group = group)) +
coord_fixed(1.3)
worldplot <- ggplot() +
geom_polygon(data = world_coordinates, aes(x=long, y = lat, group = group)) +
coord_fixed(1.3)
worldplot
str(winners_world)
ggplot(data = winners_world,
mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon() +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Global Human Development Index (HDI)") +
plain
ggplot(data = world_coordinates,
mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon() +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Global Human Development Index (HDI)") +
plain
winners_world <- merge(winners_counts, world_coordinates, all.y = TRUE, all.x = FALSE)
plain <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)
)
ggplot(data = world_coordinates,
mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon() +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Global Human Development Index (HDI)") +
plain
ggplot(data = world_coordinates,
mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = freq)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Global Human Development Index (HDI)") +
plain
ggplot(data = winners_world,
mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = freq)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Global Human Development Index (HDI)") +
plain
str(world_coordinates)
str(winners_counts)
winners_world <- merge(winners_counts, world_coordinates, all.y = TRUE, all.x = FALSE) %>%
mutate(freq = ifelse(is.na(.$freq), 0, freq))
winners_world$freq
table(winners_world$freq)
winners_world <- merge(winners_counts, world_coordinates, all.y = TRUE, all.x = FALSE) %>%
mutate(freq = ifelse(is.na(.$freq), 0, freq))
plain <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)
)
ggplot(data = winners_world,
mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = freq)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Global Human Development Index (HDI)") +
plain
head(winners_world)
winners_world <- winners_world[order(winners_world$order), ]
plain <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)
)
ggplot(data = winners_world,
mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = freq)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Global Human Development Index (HDI)") +
plain
winners_world <- merge(winners_counts, world_coordinates, all.y = TRUE, all.x = FALSE)
winners_world <- winners_world[order(winners_world$order), ]
plain <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)
)
ggplot(data = winners_world,
mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = freq)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Global Human Development Index (HDI)") +
plain
winners_counts <- winners_continents$Nationality %>%
table %>%
as.data.frame()
winners_counts
which(!(winners_counts$region %in% world_coordinates$region))
colnames(winners_counts) <- c("region", "freq")
which(!(winners_counts$region %in% world_coordinates$region))
winners_counts$region[which(!(winners_counts$region %in% world_coordinates$region)),]
winners_counts$region[which(!(winners_counts$region %in% world_coordinates$region))]
winners_counts <- winners_counts %>%
mutate(region = recode("United States" = "USA",
"United Kingdom" = "UK")
)
winners_counts <- winners_counts %>%
mutate(region = recode(str_trim(region),
"United States" = "USA",
"United Kingdom" = "UK")
)
str(winners_counts)
winners_world <- merge(winners_counts, world_coordinates, all.y = TRUE, all.x = FALSE)
winners_world <- winners_world[order(winners_world$order), ]
plain <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)
)
ggplot(data = winners_world,
mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = freq)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Global Human Development Index (HDI)") +
plain
ggplot(data = winners_world,
mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = freq)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Winners of the London Marathon") +
plain
ggplot(data = winners_world,
mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = freq)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Winners of the London Marathon")
ggplot(data = winners_world,
mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = freq)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Winners of the London Marathon") +
theme_bw()
ggplot(data = winners_world,
mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = freq)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Winners of the London Marathon") +
theme_minimal()
ggplot(data = winners_world,
mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = freq)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Winners of the London Marathon") +
theme_classic()
ggplot(data = winners_world,
mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = freq)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Winners of the London Marathon") +
theme_void()
str(marathon)
str(winners)
ggplot(data = winners_continents,
aes(x = year,
y = Hours))
ggplot(data = winners_continents,
aes(x = Year,
y = Hours)
)
str(winners_continents)
ggplot(data = winners_continents,
aes(x = Year.x,
y = Hours)
)
ggplot(data = winners_continents,
aes(x = Year.x,
y = Hours)
) +
geom_point()
ggplot(data = winners_continents,
aes(x = Year.x,
y = Hours ,
colour = Continent)
) +
geom_point()
winners_continents$Seconds_total <- winners_continents$Hours * 60^2 + winners_continents$Minutes * 60 + winners_continents$Seconds
ggplot(data = winners_continents,
aes(x = Year.x,
y = Hours ,
colour = Continent)
) +
geom_point()
ggplot(data = winners_continents,
aes(x = Year.x,
y = Seconds_total ,
colour = Continent)
) +
geom_point()
str(winners_continents)
ggplot(data = winners_continents,
aes(x = Year.x,
y = Seconds_total ,
colour = Continent,
group = Category)
) +
geom_point()
ggplot(data = winners_continents,
aes(x = Year.x,
y = Seconds_total ,
colour = Nationality,
group = Category)
) +
geom_point()
library("WHO")
install.packages("WHO")
install.packages(WHO)
str(characters_stats)
characters_stats %>%
group_by(question, name) %>%
summarise(rating_mean = mean)
characters_stats %>%
group_by(question, name) %>%
summarise(rating_mean = mean(number_ratings))
str(character_stats)
str(characters_stats)
head(characters_stats)
ggplot(data = characters_stats,
aes(x = avg_rating,
y = question))
ggplot(data = characters_stats,
aes(x = avg_rating,
y = question)) +
geom_point()
ggplot(data = characters_stats %>% filter(uni_name == "Friends"),
aes(x = avg_rating,
y = question)) +
geom_point()
ggplot(data = characters_stats %>% filter(uni_name == "Friends"),
aes(x = avg_rating,
y = question)) +
geom_facet(~name) +
geom_point()
ggplot(data = characters_stats %>% filter(uni_name == "Friends"),
aes(x = avg_rating,
y = question)) +
facet_grid(. ~ name) +
geom_point()
unique(characters_stats$question)
ggplot(data = characters_stats %>% filter(uni_name == "Friends", question %in% c("awkward/charming", "extrovert/introvert", "lovable/punchable", "bad-cook/good-cook")),
aes(x = avg_rating,
y = question)) +
facet_grid(. ~ name) +
geom_point()
ggplot(data = characters_stats %>% filter(uni_name == "Friends", question %in% c("awkward/charming", "extrovert/introvert", "loveable/punchable", "bad-cook/good-cook")),
aes(x = avg_rating,
y = question)) +
facet_grid(. ~ name) +
geom_point()
## Characters subset
characters_subset <- characters_stats %>%
filter(uni_name == "Friends", question %in% c("awkward/charming", "extrovert/introvert", "loveable/punchable", "bad-cook/good-cook"))
ggplot(data = characters_subset,
aes(x = avg_rating,
y = question)) +
facet_grid(. ~ name) +
geom_point()
head(characters_subset)
View(characters_subset)
View(characters_stats)
grepl(paste0("*", .$personality)
)
grepl(paste0("*", psych_stats$personality))
?grepl
grepl(pattern = paste0("*", psych_stats$personality), x = psych_stats$question)
paste0("*", psych_stats$personality)
?str_sub
psych_stats <- psych_stats %>%
mutate(question2 = str_sub(start = "/"))
psych_stats <- psych_stats %>%
mutate(question2 = str_extract(question, "^.*(?=(/))")) # excluding the @)
head(psych_stats)
psych_stats <- psych_stats %>%
mutate(question2 = str_extract(question, "^.*(?=(/))")) %>%
mutate(rating = ifelse(personality != question2,
yes = 100 - avg_rating,
no = avg_rating))
head(psych_stats)
psych_stats <- psych_stats %>%
mutate(question2 = str_extract(question, "^.*(?=(/))")) %>%
mutate(mean_rating = ifelse(personality != question2,
yes = 100 - avg_rating,
no = avg_rating)) %>%
select(char_id, question, mean_rating, rating_sd, number_ratings)
psych_stats <- tuesdata$psych_stats %>%
## Recode
mutate(question2 = str_extract(question, "^.*(?=(/))")) %>%
mutate(mean_rating = ifelse(personality != question2,
yes = 100 - avg_rating,
no = avg_rating)) %>%
select(char_id, question, mean_rating, rating_sd, number_ratings)
saveRDS(characters,
file = here::here("raw_data", "characters.rds")
)
write.table(psych_stats, here::here("raw_data", "psych_stats.csv"), sep = ";")
psych_stats <- read.csv(
file = here::here("raw_data", "psych_stats.csv"),
sep = ";"
)
characters_stats <- merge(
x = characters,
y = psych_stats,
by.x = "id",
by.y = "char_id"
)
## Characters subset
characters_subset <- characters_stats %>%
filter(uni_name == "Friends", question %in% c("awkward/charming", "extrovert/introvert", "loveable/punchable", "bad-cook/good-cook"))
ggplot(data = characters_subset,
aes(x = avg_rating,
y = question)) +
facet_grid(. ~ name) +
geom_point()
ggplot(data = characters_subset,
aes(x = mean_rating,
y = question)) +
facet_grid(. ~ name) +
geom_point()
psych_stats <- read.csv(
file = here::here("raw_data", "psych_stats.csv"),
sep = ";"
)
characters_stats <- merge(
x = characters,
y = psych_stats,
by.x = "id",
by.y = "char_id"
)
## Characters subset
characters_subset <- characters_stats %>%
filter(uni_name == "Friends", question %in% c("awkward/charming", "extrovert/introvert", "loveable/punchable", "bad-cook/good-cook"))
View(characters_subset)
tuesdata$psych_stats %>%
filter(uni_name == "Friends", question %in% c("awkward/charming", "extrovert/introvert", "loveable/punchable", "bad-cook/good-cook")) %>%
## Recode
mutate(question2 = str_extract(question, "^.*(?=(/))"))
psych_stats <- tuesdata$psych_stats %>%
filter(uni_name == "Friends", question %in% c("awkward/charming", "extrovert/introvert", "loveable/punchable", "bad-cook/good-cook")) %>%
## Recode
mutate(question2 = str_extract(question, "^.*(?=(/))")) %>%
mutate(mean_rating = ifelse(personality == question2,
yes = 100 - avg_rating,
no = avg_rating)) %>%
select(char_id, question, mean_rating, rating_sd, number_ratings)
psych_stats
tuesdata$psych_stats %>%
filter(uni_name == "Friends", question %in% c("awkward/charming", "extrovert/introvert", "loveable/punchable", "bad-cook/good-cook")) %>%
## Recode
mutate(question2 = str_extract(question, "^.*(?=(/))")) %>%
mutate(mean_rating = ifelse(personality == question2,
yes = 100 - avg_rating,
no = avg_rating))
psych_stats <- tuesdata$psych_stats %>%
## Recode
mutate(question2 = str_extract(question, "^.*(?=(/))")) %>%
mutate(mean_rating = ifelse(personality == question2,
yes = 100 - avg_rating,
no = avg_rating)) %>%
select(char_id, question, mean_rating, rating_sd, number_ratings)
write.table(psych_stats, here::here("raw_data", "psych_stats.csv"), sep = ";")
h_stats <- read.csv(
file = here::here("raw_data", "psych_stats.csv"),
sep = ";"
)
characters_stats <- merge(
x = characters,
y = psych_stats,
by.x = "id",
by.y = "char_id"
)
## Characters subset
characters_subset <- characters_stats %>%
filter(uni_name == "Friends", question %in% c("awkward/charming", "extrovert/introvert", "loveable/punchable", "bad-cook/good-cook"))
ggplot(data = characters_subset,
aes(x = mean_rating,
y = question)) +
facet_grid(. ~ name) +
geom_point()
ggplot(data = characters_subset,
aes(x = mean_rating,
y = question,
colour = name)) +
#facet_grid(. ~ name) +
geom_point()
## Characters subset
characters_subset <- characters_stats %>%
filter(uni_name == "Breaking Bad", question %in% c("awkward/charming", "extrovert/introvert", "loveable/punchable", "bad-cook/good-cook"))
ggplot(data = characters_subset,
aes(x = mean_rating,
y = question,
colour = name)) +
#facet_grid(. ~ name) +
geom_point()
## Characters subset
characters_subset <- characters_stats %>%
filter(uni_name == "Breaking Bad")
ggplot(data = characters_subset,
aes(x = mean_rating,
y = question,
colour = name)) +
#facet_grid(. ~ name) +
geom_point()
questions <- unique(characters_stats$question)[1:15]
## Characters subset
characters_subset <- characters_stats %>%
filter(uni_name == "Breaking Bad", question %in% questions)
ggplot(data = characters_subset,
aes(x = mean_rating,
y = question,
colour = name)) +
#facet_grid(. ~ name) +
geom_point()
