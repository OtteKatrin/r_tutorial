---
title: "Final Exercise"
---

This exercise comes back to most topics presented in this workshop (but will also go beyond it slightly in some cases to provide some additional input). If you are a R beginner and followed the workshop, you can do this last exercise in the end to again test your knowledge. If you already have some R experience, you can do this exercise before the rest of the workshop and use it to identify weak points to follow up on. It will be a bit harder than the other workshop exercises to challenge you one last time and think about concepts you might want to revisit, so don't worry if some exercises feel a bit harder, we haven't talked about everything yet. Use all resources at your disposal, that's how you would work on a real project as well.

So, in order to provide you with a totally fresh data set, let's look at beach volleyball. We want to know if height differences in volleyball matter that much, that taller teams have a winning advantage. If that would be the case, the mean height of the winning team should be significantly larger than the mean height of the losing team. Let's take a look: 

::: callout-tip
Throughout this script I will use a mixture of [tidyverse](../basics/tidyverse.qmd) and `Base R` code. Fell free to use the syntax you fell comfortable with.
:::

## Exercise 1

1.  [Download](../qmd/load_data/load_data_exercise.qmd) the data sets [`vb_w` and `vb_l`](https://github.com/nickhaf/r_tutorial/tree/main/raw_data) and [load the data](../load_data/load_data.qmd) them into R.

::: {.callout-tip collapse="true"}
## Hints

1.  Admittedly not the easiest data loading exercise. One file is a `.csv` file, the other an SPSS file (`.sav`). Take a look [here](../load_data/load_data.qmd) to see how to load them into R.
2.  You need to install `haven` to load the `.sav` file.
3.  You need to look at the `sep` argument in `read.csv()`: It needs to specify how the values in the `.csv` file are seperated. Take a look into the file itself to find out. We have seen a simmilar example in [this exercise](https://nickhaf.github.io/r_tutorial/qmd/load_data/load_data_exercise.html#exercies-2).
:::

::: {.callout=caution collapse="true"}

## Solution

```{r}
# install.packages("have") # Commented out, only execute if the package needs to be installed. 
library(haven)

vb_w <- read.csv(file = here::here("raw_data", "vb_w.csv"), sep = " ")
vb_l <- read_sav(file = here::here("raw_data", "vb_l.sav"))
```

:::

2.  [Merge](../merging/merging.qmd) `vb_l` and `vb_w`.

::: {.callout-tip collapse="true"}
## Hint

Use the argument `by` in `merge()` to select the columns `id` and `gender` on which the data sets wil get merged. 
:::

```{r}
vb <- merge(vb_l, 
            vb_w, 
            by = c("id", "gender"))
```

4. [Select](https://nickhaf.github.io/r_tutorial/qmd/subsetting/subsetting.html#columns) only the columns from the data frames that are relevant to this question, and an identifier column, so we can merge them in the next step.

::: {.callout=tip collapse="true"} 

## Hint
The relevant columns are: `c("gender", "l_p1_hgt", "l_p2_hgt", "w_p1_hgt", "w_p2_hgt")`. 
:::

::: {.callout=caution collapse="true"}

## Solution

```{r}
vb <- vb[ , c("id", "gender", "l_p1_hgt", "l_p2_hgt", "w_p1_hgt", "w_p2_hgt")]

```

:::

4.  Remove any remaining [NAs](../missings/missings.qmd) from this data set.

::: {.callout=tip collapse="true"}

## Hint

Use `na_omit()` to remove all `NAs` at once.

:::

::: {.callout=caution collapse="true"}

## Solution

```{r}
vb <- na.omit(vb)
```

:::

5.  Calculate the mean height by team. Add the results in two new columns to the `vb` data frame.

::: {.callout-tip collapse="true"}
## Hint

You will need to calculate the mean of the two columns **by row**. There is a function called `rowMeans()` which can do exactly that. Provide a data frame consisting only of the relevant columns as input.
:::

::: {.callout-caution collapse="true"}
## Solution

```{r}
vb$winning_height <- rowMeans(vb[, c("w_p1_hgt", "w_p2_hgt")]) 
vb$losing_height <- rowMeans(vb[, c("l_p1_hgt", "l_p2_hgt")]) 
```
:::

7.  Build two separate data sets, one for men, one for women.

::: {.callout=note collapse="true"}

We haven't really looked at most of this stuff in depth. Use your favorite search engine and try to solve it anyways, as you will often encounter problems you haven't seen yet.

## Exercise 2

Now, let's do a paired paired t-test comparing the mean winners height against the mean losers height.

1.  One assumption of the paired t-test is a normal distribution of the differences of the pairs. Check this assumption [visually](../plotting/plotting.qmd) by creating a histogram of the `winning_height - losing_height` difference.

::: {.callout=caution collapse="true"} \## Solution

```{r}
ggplot(data = vb,
       mapping = aes(x = winning_height - losing_height)
       ) +
  geom_histogram(binwidth = 0.5)


```

:::

2.  Do a paired t-test compairing the winning teams height vs the losing team height.

::: {.callout=tip collapse="true"} \## Hint Use the function `t.test()` and set the argument `paired = "true"`. :::

::: {.callout=caution collapse="true"}

```{r}
t.test(vb$winning_height, vb$losing_height, paired = "true")
```

Th p-value is `< 0.001`. However, we have a **very** large sample, so almost all group differences will become significant. 

:::

2.  Look at the mean difference. Not very big, right? Let's calculate a standardized effect size, Cohen's *d*:

$d = \frac{\overline{x}_1 - \overline{x}_2}{\sqrt{(s^2_1 + s^2_2)/2}}$

Write a function to do that, then calculate the effect size using it. 

::: {.calout-caution collapse="true"}
```{r}
cohens_d <- function(x_1, x_2, var_1, var_2){
  d <- (x_1 - x_2)/(sqrt(var_1 + var_2)/2)
  return(d)
}

cohens_d(x_1 = mean(vb$winning_height), 
         x_2 = mean(vb$losing_height), 
         var_1 = var(vb$winning_height), 
         var_2 = var(vb$losing_height)
         )

```

So, following Cohen's conventions, this is not even inside the range for small effect sizes. The height differences in professional volleyball are therefore probably negligible, as the size differences will be very small anyways.   

:::

## Exercise 3

1. Reform this resulting data frame into long format, so all heights can be found in one column, with the winning/losing information in another column. 

::: {.calout-caution collapse="true"}

::: tidy
```{r}
vb_long <- vb %>%
  pivot_longer(cols = c("winning_height", "losing_height"),
               names_to = "result",
               values_to = "mean_height")
```

:::

:::

2. Use `ggplot` to build a violin plot showing the winners and losers height distribution by gender. Violin plots are similar to box plots but have the advantage of conveying more distributional information. If you want, you can also add a small box plot on top of the violin plot to have the advantage of both. 

::: {.calout-caution collapse="true"}

::: tidy
```{r}
vb_long <- vb_long %>%
  mutate(group = paste0(.$result, .$gender))

ggplot(vb_long, 
       mapping = aes(x = group, y = mean_height, fill = gender)) +
  geom_violin() +
  geom_boxplot(width=0.1, color="grey", alpha=0.2, position = "dodge") +
  scale_fill_brewer(palette = "Dark2") +
    theme_bw()

```
:::
:::