{
  "hash": "445dfaae98e163e1ff21e5aa1c1eb289",
  "result": {
    "markdown": "---\ntitle: \"Plotting\"\n---\n\n\n::: callout-note\nThis chapter is optional. It is not necessary to follow the rest of the conference, but you will get started with plotting in R.\n:::\n\nNow, let's take a closer look at how `ggplot2` works. We already had a quick glimpse at it: Plots are build from different layers to create complex outputs. There are endless possibilities for different plot types, look at the [R graph gallery](https://r-graph-gallery.com/) for some inspiration and code.\n\nFirst, let's plot a relatively simple plot to get you familiar with how `ggplot2` works. After that, we will use the preparation we have done in the last chapters to plot the number of gold medals each country has won over the years on a world map, which gets slightly more complex.\n\nLet's load our data (if you haven't already):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nathletes <- readRDS(file = here::here(\"raw_data\", \"athletes.rds\"))\n```\n:::\n\n\n## First plot\n\nFor this plot, we want to find the country with the most medal winners for each sport. The preparation is pretty similar to what we have done [before]().\n\n::: tidy\n\n::: {.cell}\n\n```{.r .cell-code}\nbest_by_sport <- athletes %>%\n  ## Get all gold medalists\n  filter(Medal == \"Gold\") %>%\n  ## Group them by sport and region\n  group_by(Sport, Region) %>%\n  ## count the number of medals each country has per sport category\n  count(Medal) %>%\n  ## Now only group by sport, so we can extract the maximum medal row by sport, and not by sport and country\n  group_by(Sport) %>%\n  ## Extract the country with the most medals\n  slice(which.max(n)) \n```\n:::\n\n\n### `ggplot()`\n\nIn general, a `ggplot` starts with the `ggplot()` function. In it we define the data we want to use, and some aesthetics. The `ggplot()` function then draws our (currently still empty) plotting area, with the defined axes (see next section).\n\n### `aes()`\n\nAesthetics set parameters **dependent on the data**. In most cases, we will define our x and y axis here. We can also group data together by groups found in a column. If we want the data to have a different color, form, filling etc. depending on values in a column, we can define that here as well (we will look at that later on).\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- ggplot(\n  data = best_by_sport,\n  aes(\n    x = Sport,\n    y = n,\n  )\n)\n\np\n```\n\n::: {.cell-output-display}\n![](plotting_files/figure-html/unnamed-chunk-3-1.png){width=1056}\n:::\n:::\n\n\nIn this case, the sport is plotted on the x axis and the number of gold medals (`n`) on the y axis. Bar filling will vary depending on the region.\n\n### geom\\_()\n\nThe geoms do the actual plotting. For example, if we want a barplot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\np +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](plotting_files/figure-html/unnamed-chunk-4-1.png){width=1056}\n:::\n:::\n\n\nLooking pretty boring, right? Let's give each country another color by defining the `fill` aesthetic. Also, lets order the x axis depending on the number of gold medalists:\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- p +\n  geom_col(aes(fill = Region, x = reorder(Sport, n)))\np\n```\n\n::: {.cell-output-display}\n![](plotting_files/figure-html/unnamed-chunk-5-1.png){width=1056}\n:::\n:::\n\n\nCorrect! We can define the aesthetics also within the `geom_()` functions. In this case they will only be used for that specific function, and not for the whole plot (which would be the case if we had defined the `fill` aesthetic in the `ggplot()` function).\n\n\n::: {.cell}\n\n```{.r .cell-code}\np +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](plotting_files/figure-html/unnamed-chunk-6-1.png){width=1056}\n:::\n:::\n\n\nThis gives us black points now. If we had defined our aesthetics in the `ggplot()` function, the points would have the same colors as the bars. Also note that we layed another geom (`geom_point()`) over our plot, we added a new layer (that's what I meant earlier on by saying plots consist of different layers).\n\n### General plotting options\n\nWe can tweak all aspects of the appearance of a plot. For example, we might want to turn the x axis labels by 90 degrees to actually make them readable:\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- p +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\np\n```\n\n::: {.cell-output-display}\n![](plotting_files/figure-html/unnamed-chunk-7-1.png){width=1056}\n:::\n:::\n\n\nOr we could label the bars with the country:\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- p +\n  geom_text(aes(label = Region), hjust = -0.3, angle = 90, size = 2.5)\np\n```\n\n::: {.cell-output-display}\n![](plotting_files/figure-html/unnamed-chunk-8-1.png){width=1056}\n:::\n:::\n\n\nOr use different colors and a different theme:\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- p +\n  theme_classic() +\n  ## And turn the axis labels again, because the new theme has overwritten our theme\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  ## Specify which colors are used for the filling\n  scale_fill_manual(values = viridisLite::viridis(19))\n\np  \n```\n\n::: {.cell-output-display}\n![](plotting_files/figure-html/unnamed-chunk-9-1.png){width=1056}\n:::\n:::\n\n\nFinally, change the title and axis labels:\n\n\n::: {.cell}\n\n```{.r .cell-code}\np +\n  ggtitle(\"Country with the most Olympic gold medal winners by sport\") +\n  xlab(\"Sport\") +\n  ylab(\"Number of gold medal winners\")\n```\n\n::: {.cell-output-display}\n![](plotting_files/figure-html/unnamed-chunk-10-1.png){width=1056}\n:::\n:::\n\n:::\n\nPretty cool! Now we know that the UK is the all time Olympic Tug-Of-War champion! Also note that we are looking at the number of people from each country winning a gold medal, so team sports are counted multiple times.\n\n## Second plot\n\nLet's take a look at another, slightly different plot, just to see what can be easily achieved with `ggplot2` (and we have prepared the data to do that, so we don't want to waste the work).\n\nHere is our data preparation from the previous chapters:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nworld_coordinates <- readRDS(file = here::here(\"raw_data\", \"world_coordinates.rds\"))\n\nmedal_counts <- athletes %>%\n  filter(Medal == \"Gold\") %>%\n  group_by(Region) %>%\n  count(Medal) \n\nmedal_countries <- world_coordinates %>%\n  rename(\"Region\" = region) %>%\n  left_join(medal_counts)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(Region)`\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = medal_countries, \n       mapping = aes(x = long, y = lat, group = group)) + \n  coord_fixed(1.3) +\n  geom_polygon(aes(fill = n)) +\n  scale_fill_distiller(palette =\"YlOrBr\", direction = 1) + \n  ggtitle(\"Number of Olympic gold medalists by country\") +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](plotting_files/figure-html/unnamed-chunk-12-1.png){width=1056}\n:::\n:::\n\n\nNote that the medals for team sports are counted multiple times, as our data contained the gold medal wins by person, and not by discipline.\n",
    "supporting": [
      "plotting_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}