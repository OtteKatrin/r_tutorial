# Setup

## R

## RStudio

### Optional: posit Cloud

In case you don't use a notebook where you can install R and RStudio, or you don't want to, you can use the posit Cloud service. It can be run in you browser, and provides the same functions and interface as if you were working with your own RStudio installation. And it's free as well (at least 25 hours per month, but that should be more than enough for this workshop and probably for the following week).

1.  Go to [posit Cloud](https://posit.cloud/).
2.  Click on `GET STARTED`.
3.  Create an account (it's free) and login.
4.  On the upper right, click on `New Project`. This will create a new RStudio project, which you can use the same way as described in this tutorial.

### Structure of the RStudio interface

#### Script Pane


```{r}
print("Hello World!")
```

Tadaa, we just wrote our first line of code.

#### Console {#console}
You can also work directly in the console, for example to try out things.
Type, into your console:

```{r}
# Sum two values
10 + 5
```
By the way: Code lines, that are preceded by a `#` are commented out, and will not be evaluated.

## Workflow

### Scripts

When only coding in our [console](#console) we quickly run into the question where to save our code for further evaluation. Therefore, we want to write all our important code into a [script](#script_pane).

### RStudio Projects

Over time, it will become increasingly hard to organize all your files, working directories and workspaces in a reasonable manner. For this, RStudio Projects can be used (highly recommended).

### Exercises

1.  Create a new folder for this tutorial, where all your files will go.
2.  Create a new RStudio project and open it. Go to `File` - `New Project` - `Existing Directory` and select the path of the folder you created in step `1`.
3.  Create a new R Script by clicking on `File` - `New File` - `R Script`. Save it in you folder.

  Tipp: Within your project folder create a folder named `R`, where all your R Scripts will go. You can do the same for `data`, `plots` etc. later on. This will help you to structure your working directory.


## About this workshop

This workshop will use a tutorial package (you will learn more about packages later) that can be run from within `R` and will provide interactive exercises. For now, please install that tutorial package by typing (and evaluating) the following code into your newly created R Script:

```{r, eval = FALSE}
install.packages("devtools")
devtools::install_github("nickhaf/tutoR")
```

For each chapter, there will be a short theory part. Most of the exercises can be run interactively with the `tutoR` package, but some will encourage you to use the RStudio environment, to get more familiar with it.

Feel free to use any resources at you disposal to solve the exercises. That's how you would also do it in real live. Just make sure you understand why your solution works (or why it doesn't).
