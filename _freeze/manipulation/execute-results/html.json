{
  "hash": "12ad68cf8d6497fe69e8b31a3cd2baa6",
  "result": {
    "markdown": "::: {.cell}\n\n:::\n\n\n# Data wrangling\n\n## Overview of the main commands in this section\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## merge two data frames by different columns:\nmerge(\n  x = winners,\n  y = continents,\n  by.x = \"Nationality\",\n  by.y = \"Entity\"\n)\n\n## Add a new column:\nwinners_continents$Seconds_total <- winners_continents$Hours * 60^2 +\n                                    winners_continents$Minutes * 60 +\n                                    winners_continents$Seconds\n\n## Show missing values:\nis.na(winners_continents$Hours)\n\n## Remove rows that have a missing in the specified column:\nwinners_continents_na <- winners_continents[!is.na(winners_continents$Hours), ]\n\n## Add a new column conditionally to contents of other columns: \nwinners_continents$Wheelchair <- ifelse(\n  winners_continents$Category %in% c(\"Wheelchair Men\", \"Wheelchair Women\"),\n  yes = TRUE,\n  no = FALSE\n)\n```\n:::\n\n\n::: tidy\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\n## Add a new column using mutate():\nwinners_continents <- winners_continents %>%\n  mutate(Minutes_total = winners_continents$Hours * 60 +\n                         winners_continents$Minutes *\n                         winners_continents$Seconds / 60)\n```\n:::\n\n:::\n\n## Data set\n\nSuppose we want to look at the winners by continent (see [last chapter](subsetting.qmd) for the data set). In this case, we will have to add a list assigning each Nationality a continent. We can easily find such a list online, for example at [ourworldindata.org](https://ourworldindata.org/grapher/continents-according-to-our-world-in-data). I have already [downloaded](https://github.com/nickhaf/r_tutorial/tree/main/raw_data) the `.csv`, and we have already loaded it into R in the exercise 2 of [load data](http://localhost:3262/load_data.html#solution):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwinners <- readRDS(file = \"./raw_data/winners.rds\")\ncontinents <- read.csv(\n  file = \"./raw_data/continents.csv\",\n  sep = \";\"\n)\n```\n:::\n\n\n## Wide and long format\n\n## Merging\n\nTo merge two data frames that include information that belongs together, we need a common column, on which we can combine them. In our case, this is the column containing the country, but they are named differently. This doesn't pose a problem, as we can define which columns should be taken from which data frame for merging:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwinners_continents <- merge(\n  x = winners,\n  y = continents,\n  by.x = \"Nationality\",\n  by.y = \"Entity\"\n)\nhead(winners_continents)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Nationality         Category Year.x            Athlete Hours Minutes Seconds\n1   Australia   Wheelchair Men   2009      Kurt Fearnley     1      28      57\n2   Australia   Wheelchair Men   2013      Kurt Fearnley     1      31      29\n3   Australia Wheelchair Women   2018 Madison de Rozario     1      42      58\n4     Belgium   Wheelchair Men   1993    George Vandamme     1      44      10\n5      Canada   Wheelchair Men   1988          Ted Vince     2       1      37\n6      Canada   Wheelchair Men   2010       Josh Cassidy     1      35      21\n  Code Year.y     Continent\n1  AUS   2015       Oceania\n2  AUS   2015       Oceania\n3  AUS   2015       Oceania\n4  BEL   2015        Europe\n5  CAN   2015 North America\n6  CAN   2015 North America\n```\n:::\n:::\n\n\nGreat! Now the information that belongs together is stored together.\n\n## New columns\n\nAdding new columns to a data frame is pretty straight forward. We just define the column name, and then assign it some input. For example, we could be interested in calculating the seconds each person needed to finish, and add that as a new column:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwinners_continents$Seconds_total <- winners_continents$Hours * 60^2 +\n                                    winners_continents$Minutes * 60 +\n                                    winners_continents$Seconds\nhead(winners_continents)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Nationality         Category Year.x            Athlete Hours Minutes Seconds\n1   Australia   Wheelchair Men   2009      Kurt Fearnley     1      28      57\n2   Australia   Wheelchair Men   2013      Kurt Fearnley     1      31      29\n3   Australia Wheelchair Women   2018 Madison de Rozario     1      42      58\n4     Belgium   Wheelchair Men   1993    George Vandamme     1      44      10\n5      Canada   Wheelchair Men   1988          Ted Vince     2       1      37\n6      Canada   Wheelchair Men   2010       Josh Cassidy     1      35      21\n  Code Year.y     Continent Seconds_total\n1  AUS   2015       Oceania          5337\n2  AUS   2015       Oceania          5489\n3  AUS   2015       Oceania          6178\n4  BEL   2015        Europe          6250\n5  CAN   2015 North America          7297\n6  CAN   2015 North America          5721\n```\n:::\n:::\n\n\nOr, using the `tidyverse` with the help of `mutate()`:\n\n::: tidy\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nwinners_continents <- winners_continents %>%\n  mutate(Minutes_total = winners_continents$Hours * 60 + winners_continents$Minutes * winners_continents$Seconds / 60)\nhead(winners_continents)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Nationality         Category Year.x            Athlete Hours Minutes Seconds\n1   Australia   Wheelchair Men   2009      Kurt Fearnley     1      28      57\n2   Australia   Wheelchair Men   2013      Kurt Fearnley     1      31      29\n3   Australia Wheelchair Women   2018 Madison de Rozario     1      42      58\n4     Belgium   Wheelchair Men   1993    George Vandamme     1      44      10\n5      Canada   Wheelchair Men   1988          Ted Vince     2       1      37\n6      Canada   Wheelchair Men   2010       Josh Cassidy     1      35      21\n  Code Year.y     Continent Seconds_total Minutes_total\n1  AUS   2015       Oceania          5337      86.60000\n2  AUS   2015       Oceania          5489      74.98333\n3  AUS   2015       Oceania          6178     100.60000\n4  BEL   2015        Europe          6250      67.33333\n5  CAN   2015 North America          7297     120.61667\n6  CAN   2015 North America          5721      72.25000\n```\n:::\n:::\n\n:::\n\nHold on! Both new columns seem to have missing values, which is an important concept which we haven't talked about yet. So let's do that quickly, and then merge!\n\n## Missing values\n\nMissing values are denoted in R by `NA` (or `NaN` in some cases). They pretty strongly nullify a calculation - if one missing value is found somewhere along the line, the result will also be `NA` (if not specified otherwise):\n\n\n::: {.cell}\n\n```{.r .cell-code}\n4 + 5 + NA\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n:::\n\n\nThat's why our newly build columns include `NAs`: The column `Hours` already had some, and by adding with `NAs` we just produced new ones.\n\nTo check if values are `NA`, we can use `is.na()`:\n\n\n::: {.cell output.lines='4'}\n\n```{.r .cell-code}\nis.na(winners_continents$Hours)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [37] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE\n...\n```\n:::\n:::\n\n\nSome `TRUEs`, so there are missing values here. Let's count them (Summing an [logical vector](basics.qmd#comparisons-and-logical-operators) counts the number of `TRUE` values.):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(winners_continents$Hours))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n\nWe seem to have `5` missings in this column. There are multiple different ways to deal with missings. For this tutorial, we just remove cases with missing values on the `Hours` variable:\n\n\n::: {.cell output.lines='4'}\n\n```{.r .cell-code}\nwinners_continents_na <- winners_continents[!is.na(winners_continents$Hours), ]\n```\n:::\n\n\nWhat happens here? Like always when filtering specific rows, we define a logical vector, which has a `TRUE` for all rows that have a missing on `ID` and a `FALSE` for all others (by using the `!` operator, which inverts the boolean values - otherwise we would extract all rows with missing values in the `Hours` column):\n\n\n::: {.cell output.lines='4'}\n\n```{.r .cell-code}\n!is.na(winners_continents$Hours)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [13]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [25]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [37]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n...\n```\n:::\n:::\n\n\nWe also assign a new name to the resulting data frame.\n\n## ifelse\n\nWe can also add new values conditionally, for example by using the `ifelse()` function. For example, let's build a composite variable which summarizes whether the category was `Whelchair` or not:\n\n\n::: {.cell output.lines='4'}\n\n```{.r .cell-code}\nwinners_continents$Wheelchair <- ifelse(\n  winners_continents$Category %in% c(\"Wheelchair Men\", \"Wheelchair Women\"),\n  yes = TRUE,\n  no = FALSE\n)\nwinners_continents\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       Nationality         Category Year.x                    Athlete Hours\n1        Australia   Wheelchair Men   2009              Kurt Fearnley     1\n2        Australia   Wheelchair Men   2013              Kurt Fearnley     1\n3        Australia Wheelchair Women   2018         Madison de Rozario     1\n...\n```\n:::\n:::\n\n\n::: tidy\n\n::: {.cell output.lines='4'}\n\n```{.r .cell-code}\nwinners_continents <- winners_continents %>%\n  mutate(over_3_h = ifelse(\n    winners_continents$Hours < 2,\n    yes = \"below\",\n    no  = \"over\"\n  ))\n\nwinners_continents\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       Nationality         Category Year.x                    Athlete Hours\n1        Australia   Wheelchair Men   2009              Kurt Fearnley     1\n2        Australia   Wheelchair Men   2013              Kurt Fearnley     1\n3        Australia Wheelchair Women   2018         Madison de Rozario     1\n...\n```\n:::\n:::\n\n:::\n\n## Exercises\n",
    "supporting": [
      "Manipulation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}