{
  "hash": "2803f6063af8b3576795055d2e66e384",
  "result": {
    "markdown": "# New columns\n\nAdding new columns to a data frame is pretty straight forward. We just define the column name, and then assign it some input:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npersons <- data.frame(name = c(\"Anna\", \"Alex\", \"John\", \"Jessi\"),\n                      age = c(19, 17, 18, 18),\n                      birth_month = c(\"Jan\", \"Sep\", \"Oct\", \"Mar\"),\n                      big5_extro = c(3.5, 2, 4.5, 4.2)\n                      )\n\npersons$big5_neuro <- c(3, 4, 1, 2)\n```\n:::\n\n\nOr, using the `tidyverse`:\n\n::: tidy\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\npersons <- persons %>%\n  mutate(big5_open = c(3, 4, 3, 4))\n```\n:::\n\n:::\n\n# ifelse\n\nWe can also add new values conditionally, for example by using the `ifelse()` function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npersons$big5_neuro_dichotomous <- ifelse(test = persons$big5_neuro >= 5/2,\n                                         yes = \"high\",\n                                         no = \"low\")\npersons\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   name age birth_month big5_extro big5_neuro big5_open big5_neuro_dichotomous\n1  Anna  19         Jan        3.5          3         3                   high\n2  Alex  17         Sep        2.0          4         4                   high\n3  John  18         Oct        4.5          1         3                    low\n4 Jessi  18         Mar        4.2          2         4                    low\n```\n:::\n:::\n\n\n::: tidy\n\n::: {.cell}\n\n```{.r .cell-code}\npersons <- persons %>%\n  mutate(big5_extra_dichotomous = ifelse(test = persons$big5_neuro >= 5/2,\n                                         yes = \"high\",\n                                         no = \"low\")\n  )\npersons\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   name age birth_month big5_extro big5_neuro big5_open big5_neuro_dichotomous\n1  Anna  19         Jan        3.5          3         3                   high\n2  Alex  17         Sep        2.0          4         4                   high\n3  John  18         Oct        4.5          1         3                    low\n4 Jessi  18         Mar        4.2          2         4                    low\n  big5_extra_dichotomous\n1                   high\n2                   high\n3                    low\n4                    low\n```\n:::\n:::\n\n:::\n\n# Merging\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntimes <- readRDS(file = \"./raw_data/times.rds\")\n\nhead(times)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 Ã— 5\n  Time       Hours Minutes Seconds    ID\n  <times>    <dbl>   <dbl>   <dbl> <int>\n1 0.09152778     2      11      48     1\n2 0.09152778     2      11      48    NA\n3 0.08986111     2       9      24     3\n4 0.09008102     2       9      43     4\n5 0.09024306     2       9      57     5\n6 0.08907407     2       8      16     6\n```\n:::\n:::\n\n\nHmm, looks like we can connect our data sets using the `ID` column:\n\n## Merging data frames\n\n# missings\n\nFinally, we have to talk about missing values. Missing values are denoted in R by `NA` (or `NaN` in some cases). We have to deal with them\n",
    "supporting": [
      "manipulation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}