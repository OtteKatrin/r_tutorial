{
  "hash": "ecafa85f38c07252feda8a0871fb7b2a",
  "result": {
    "markdown": "## What is R?\n\n## \n\n## Installation\n\n## R\n\n## RStudio\n\n### Structure of the RStudio interface\n\n#### Script Pane {#script_pane}\n\n#### Console {#console}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"Hello World!\"\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Hello World!\"\n```\n:::\n:::\n\n\nTadaa, we just wrote our first line of code.\n\n## First Steps\n\nSome of the most basic things you can do in `R` is are basic mathematical operations. In your [console](#console), type the following code lines and press `Enter`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# sum\n1 + 2\n\n# substract\n2 - 4\n\n# multiply\n4 * 4\n\n# divide\n3/2\n```\n:::\n\n\nBy the way: Code lines, that are preceded by a `#` are commented out, and will not be evaluated.\n\n## Workflow\n\n#### Scripts\n\nWhen only coding in our [console](#console) we quickly run into the question where to save our code for further evaluation. Therefore, we want to write all our code that is worth saving into a [script](#script_pane).\n\nOver time, it will become increasingly hard to organize all your files, working directories and workspaces in a reasonable manner. For this, RStudio Projects can be used (highly recommended).\n\n\n::: {.cell exercise='true'}\n\n```{.r .cell-code}\n# 1. Create a new folder folder for this tutorial, where all your files will go.\n# 2. Create a new RStudio project and open it. \n# 3. Create a new R Script and open it. \n1 + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}