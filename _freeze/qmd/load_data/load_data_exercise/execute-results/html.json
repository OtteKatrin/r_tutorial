{
  "hash": "5c78ddddb69960431c2d8288c341629f",
  "result": {
    "markdown": "## Exercise 1\n\n1.  Download the data set [`characters`](https://github.com/nickhaf/r_tutorial/tree/main/raw_data).\n2.  Load it into R, and assign the name `characters`.\n\n::: {.callout-tip collapse=\"true\"}\n## Hint\n\nIt is a `.rds` file.\n:::\n\n::: {.callout-caution collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncharacters <- readRDS(file = here::here(\"raw_data\", \"characters.rds\"))\n```\n:::\n\n:::\n\n## Exercies 2\n\n::: {.callout-note collapse=\"true\" icon=\"false\"}\n## Advanced exercise\n\n1.  Download the [`psych_stats`](https://github.com/nickhaf/r_tutorial/tree/main/raw_data) data set.\n2.  Load it into R and assign the name `psych_stats`. Did that work as expected? If not, why not?\n\n::: {.callout-tip collapse=\"true\"}\n## Hint\n\nTake a look at the `.csv` file by opening it in a text editor. Look at the documentation of `read.csv()` and take a look at the `sep` argument. Can you define another separator, so R can deduce, which elements need to be separated into different cells?\n:::\n\n::: {.callout-caution collapse=\"true\"}\n## Solution\n\nLet's try the `read.csv()` function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npsych_stats <- read.csv(file = here::here(\"raw_data\", \"psych_stats.csv\"))\n\nhead(psych_stats)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  char_id.question.personality.avg_rating.rank.rating_sd.number_ratings\n1                                 1;F2;messy/neat;neat;95.7;9;11.7;1079\n2 2;F2;disorganized/self-disciplined;self-disciplined;95.2;27;11.2;1185\n3                         3;F2;diligent/lazy;diligent;93.9;87;10.4;1166\n4                           4;F2;on-time/tardy;on-time;93.8;34;14.3;236\n5            5;F2;competitive/cooperative;competitive;93.6;56;13.4;1168\n6                6;F2;scheduled/spontaneous;scheduled;93.4;23;14.5;1173\n```\n:::\n:::\n\n\nHuh, that looks weird. If we take a look at the file by opening it in a text editor, we can see that the values are seperated by `;`. So let's call the help for `read.csv()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?read.csv\n```\n:::\n\n\nThe `sep` argument specifies that the seperator needs to be a white space (meaning tabs, spaces ... - look at the details in the documentation).\\\nSo, we can do the following:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npsych_stats <- read.csv(\n  file = here::here(\"raw_data\", \"psych_stats.csv\"),\n  sep = \";\"\n)\n\nhead(psych_stats)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  char_id                      question      personality avg_rating rank\n1      F2                    messy/neat             neat       95.7    9\n2      F2 disorganized/self-disciplined self-disciplined       95.2   27\n3      F2                 diligent/lazy         diligent       93.9   87\n4      F2                 on-time/tardy          on-time       93.8   34\n5      F2       competitive/cooperative      competitive       93.6   56\n6      F2         scheduled/spontaneous        scheduled       93.4   23\n  rating_sd number_ratings\n1      11.7           1079\n2      11.2           1185\n3      10.4           1166\n4      14.3            236\n5      13.4           1168\n6      14.5           1173\n```\n:::\n:::\n\n\nThis looks better!\n:::\n:::\n",
    "supporting": [
      "load_data_exercise_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}