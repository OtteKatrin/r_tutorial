{
  "hash": "1736125f4dd811fbd5a33944ed893402",
  "result": {
    "markdown": "::: {.cell}\n\n:::\n\n\n\n# Subsetting data\n\nPlease take a look at the different [data structures in R](data_structures.qmd) if you are not familiar with them, before you start with this chapter.\n\n## Data set\n\n![](./pictures/marathon.jpg)[^subsetting-1]\n\n[^subsetting-1]: Image by [Miguel A Amutio](https://unsplash.com/de/@amutiomi?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText) on [Unsplash](https://unsplash.com/de/fotos/QDv-uBc-poY?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText).\n\nLoad the data set, which lies within the folder `raw_data` in my working directory:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwinners <- readRDS(file = \"./raw_data/winners.rds\")\n```\n:::\n\n\nLet's take a quick look:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(winners)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Category Year              Athlete    Nationality Hours Minutes Seconds\n1      Men 1981 Dick Beardsley (Tie)  United States     2      11      48\n2      Men 1981  Inge Simonsen (Tie)         Norway    NA      11      48\n3      Men 1982           Hugh Jones United Kingdom     2       9      24\n4      Men 1983         Mike Gratton United Kingdom     2       9      43\n5      Men 1984     Charlie Spedding United Kingdom     2       9      57\n6      Men 1985          Steve Jones United Kingdom     2       8      16\n```\n:::\n:::\n\n\nSo, this data frame seems to hold the winners of the london marathon. Their finishing times seem to be missing, but we will deal with that later. For now we want to look at how we can extract data from our data structures, so we can work with it.\n\n## Data frames\n\nWe will look at two ways to extract rows and columns from data frames.\n\n### Base R\n\nIn `Base R`, we use square brackets `[,]` to extract specific rows and columns.   \n\n#### Rows\nIn front of the `,` we write the **rows** we want to extract:\n\n\n::: {.cell output.lines='4'}\n\n```{.r .cell-code}\n# Extract the first and the fourth row\nwinners[c(1, 4), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Category Year              Athlete    Nationality Hours Minutes Seconds\n1      Men 1981 Dick Beardsley (Tie)  United States     2      11      48\n4      Men 1983         Mike Gratton United Kingdom     2       9      43\n```\n:::\n:::\n\n\n#### Columns\nBehind it the **columns**:\n\n\n::: {.cell output.lines='4'}\n\n```{.r .cell-code}\n# Extract the second and the fourth column:\nwinners[, c(2, 4)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Year    Nationality\n1   1981  United States\n2   1981         Norway\n3   1982 United Kingdom\n...\n```\n:::\n\n```{.r .cell-code}\n# Extract the columns by name:\nwinners[, c(\"Year\", \"Nationality\")]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Year    Nationality\n1   1981  United States\n2   1981         Norway\n3   1982 United Kingdom\n...\n```\n:::\n\n```{.r .cell-code}\n# Or only the column Year (and turn it into a vector right away):\nwinners$Year\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] 1981 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994\n [16] 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009\n [31] 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 1981\n [46] 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996\n...\n```\n:::\n:::\n\n\n#### Rows & Columns\nAnd of course we can combine both calls:\n\n\n::: {.cell output.lines='4'}\n\n```{.r .cell-code}\nwinners[c(1, 4), c(2, 4)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Year    Nationality\n1 1981  United States\n4 1983 United Kingdom\n```\n:::\n\n```{.r .cell-code}\nwinners[c(1, 4), c(\"Year\", \"Nationality\")]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Year    Nationality\n1 1981  United States\n4 1983 United Kingdom\n```\n:::\n:::\n\n\nWe can also use Boolean values (every row/column must get a value here, so we extract the first 100 rows by repeating `TRUE` 100 times, and than add `FALSE` for the remaining rows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwinners[c(rep(TRUE, 100), rep(FALSE, 65)), c(TRUE, FALSE, FALSE, TRUE, TRUE)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          Category    Nationality Hours Minutes\n1              Men  United States     2      11\n2              Men         Norway    NA      11\n3              Men United Kingdom     2       9\n4              Men United Kingdom     2       9\n5              Men United Kingdom     2       9\n6              Men United Kingdom     2       8\n7              Men          Japan     2      10\n8              Men          Japan     2       9\n9              Men        Denmark     2      10\n10             Men          Kenya     2       9\n11             Men United Kingdom     2      10\n12             Men   Soviet Union     2       9\n13             Men       Portugal     2      10\n14             Men United Kingdom     2      10\n15             Men         Mexico     2       8\n16             Men         Mexico     2       8\n17             Men         Mexico     2      10\n18             Men       Portugal     2       7\n19             Men          Spain     2       7\n20             Men        Morocco     2       7\n21             Men       Portugal     2       6\n22             Men        Morocco     2       7\n23             Men  United States     2       5\n24             Men       Ethiopia    NA       7\n25             Men          Kenya     2       6\n26             Men          Kenya     2       7\n27             Men          Kenya     2       6\n28             Men          Kenya     2       7\n29             Men          Kenya     2       5\n30             Men          Kenya     2       5\n31             Men       Ethiopia     2       5\n32             Men          Kenya     2       4\n33             Men          Kenya     2       4\n34             Men       Ethiopia     2       6\n35             Men          Kenya    NA       4\n36             Men          Kenya     2       4\n37             Men          Kenya     2       3\n38             Men          Kenya     2       5\n39             Men          Kenya     2       4\n40             Men          Kenya     2       2\n41             Men       Ethiopia     2       5\n42             Men       Ethiopia     2       4\n43             Men          Kenya     2       4\n44             Men          Kenya     2       1\n45           Women United Kingdom     2      29\n46           Women United Kingdom     2      29\n47           Women         Norway     2      25\n48           Women         Norway     2      24\n49           Women         Norway     2      21\n50           Women         Norway     2      24\n51           Women         Norway     2      22\n52           Women         Norway     2      25\n53           Women United Kingdom     2      25\n54           Women         Poland     2      26\n55           Women       Portugal     2      26\n56           Women        Germany     2      29\n57           Women        Germany     2      27\n58           Women        Germany     2      32\n59           Women         Poland     2      27\n60           Women United Kingdom     2      27\n61           Women          Kenya     2      26\n62           Women        Ireland     2      26\n63           Women          Kenya     2      23\n64           Women          Kenya     2      24\n65           Women       Ethiopia     2      23\n66           Women United Kingdom     2      18\n67           Women United Kingdom     2      15\n68           Women          Kenya     2      22\n69           Women United Kingdom     2      17\n70           Women  United States     2      19\n71           Women          China     2      20\n72           Women        Germany     2      24\n73           Women        Germany     2      22\n74           Women       Ethiopia     2      22\n75           Women          Kenya     2      19\n76           Women          Kenya     2      18\n77           Women          Kenya     2      20\n78           Women          Kenya     2      20\n79           Women       Ethiopia     2      23\n80           Women          Kenya     2      22\n81           Women          Kenya     2      17\n82           Women          Kenya     2      18\n83           Women          Kenya     2      18\n84           Women          Kenya     2      18\n85           Women          Kenya     2      17\n86           Women       Ethiopia     2      17\n87           Women    Netherlands     2      18\n88  Wheelchair Men United Kingdom     3      20\n89  Wheelchair Men        Ireland     2      38\n90  Wheelchair Men United Kingdom     2      19\n91  Wheelchair Men        Ireland     2      26\n92  Wheelchair Men United Kingdom     2       8\n93  Wheelchair Men         Canada     2       1\n94  Wheelchair Men United Kingdom     1      59\n95  Wheelchair Men         Sweden    NA      57\n96  Wheelchair Men         France     1      52\n97  Wheelchair Men         Canada     1      51\n98  Wheelchair Men        Belgium     1      44\n99  Wheelchair Men United Kingdom     1      46\n100 Wheelchair Men    Switzerland     1      39\n```\n:::\n:::\n\n\nNow the stuff we looked at in [logical operators](basics.qmd#comparisons-and-logical-operators) comes in handy! We can filter rows which match some condition. For example, we might want to look at all winners from Kenya:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwinners[winners$Nationality == \"Kenya\", ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Category Year                    Athlete Nationality Hours Minutes Seconds\n10      Men 1989          Douglas Wakiihuri       Kenya     2       9       3\n25      Men 2004                Evans Rutto       Kenya     2       6      18\n26      Men 2005                 Martin Lel       Kenya     2       7      35\n27      Men 2006                 Felix Limo       Kenya     2       6      39\n28      Men 2007                 Martin Lel       Kenya     2       7      41\n29      Men 2008                 Martin Lel       Kenya     2       5      15\n30      Men 2009             Samuel Wanjiru       Kenya     2       5      10\n32      Men 2011 Emmanuel Kipchirchir Mutai       Kenya     2       4      40\n33      Men 2012   Wilson Kipsang Kiprotich       Kenya     2       4      44\n35      Men 2014   Wilson Kipsang Kiprotich       Kenya    NA       4      29\n36      Men 2015             Eliud Kipchoge       Kenya     2       4      42\n37      Men 2016             Eliud Kipchoge       Kenya     2       3       5\n38      Men 2017             Daniel Wanjiru       Kenya     2       5      48\n39      Men 2018             Eliud Kipchoge       Kenya     2       4      17\n40      Men 2019             Eliud Kipchoge       Kenya     2       2      37\n43      Men 2022               Amos Kipruto       Kenya     2       4      39\n44      Men 2023              Kelvin Kiptum       Kenya     2       1      25\n61    Women 1997           Joyce Chepchumba       Kenya     2      26      51\n63    Women 1999           Joyce Chepchumba       Kenya     2      23      22\n64    Women 2000              Tegla Loroupe       Kenya     2      24      33\n68    Women 2004             Margaret Okayo       Kenya     2      22      35\n75    Women 2011     Mary Jepkosgei Keitany       Kenya     2      19      19\n76    Women 2012     Mary Jepkosgei Keitany       Kenya     2      18      37\n77    Women 2013             Priscah Jeptoo       Kenya     2      20      15\n78    Women 2014              Edna Kiplagat       Kenya     2      20      21\n80    Women 2016             Jemima Sumgong       Kenya     2      22      58\n81    Women 2017     Mary Jepkosgei Keitany       Kenya     2      17       1\n82    Women 2018           Vivian Cheruiyot       Kenya     2      18      31\n83    Women 2019              Brigid Kosgei       Kenya     2      18      20\n84    Women 2020              Brigid Kosgei       Kenya     2      18      58\n85    Women 2021        Joyciline Jepkosgei       Kenya     2      17      43\n```\n:::\n:::\n\n\nTake a close look at the comparison before the `,`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwinners$Nationality == \"Kenya\"\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE\n [13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [25]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE\n [37]  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE\n [49] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [61]  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE\n [73] FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE\n [85]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [97] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[109] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[121] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[133] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[145] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[157] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n```\n:::\n:::\n\n\n`winners$Nationality` is a vector, so comparing its values to a specified value yields a logical vector with the respective `TRUE` and `FALSE` values. We can insert this logical vector in front of the `,` to extract all rows corresponding to that condition.\n\nIf we want to extract multiple nationalities at once, we need the `%in%` operator:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwinners[winners$Nationality %in% c(\"Kenya\", \"Germany\", \"Norway\"), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Category Year                    Athlete Nationality Hours Minutes Seconds\n2       Men 1981        Inge Simonsen (Tie)      Norway    NA      11      48\n10      Men 1989          Douglas Wakiihuri       Kenya     2       9       3\n25      Men 2004                Evans Rutto       Kenya     2       6      18\n26      Men 2005                 Martin Lel       Kenya     2       7      35\n27      Men 2006                 Felix Limo       Kenya     2       6      39\n28      Men 2007                 Martin Lel       Kenya     2       7      41\n29      Men 2008                 Martin Lel       Kenya     2       5      15\n30      Men 2009             Samuel Wanjiru       Kenya     2       5      10\n32      Men 2011 Emmanuel Kipchirchir Mutai       Kenya     2       4      40\n33      Men 2012   Wilson Kipsang Kiprotich       Kenya     2       4      44\n35      Men 2014   Wilson Kipsang Kiprotich       Kenya    NA       4      29\n36      Men 2015             Eliud Kipchoge       Kenya     2       4      42\n37      Men 2016             Eliud Kipchoge       Kenya     2       3       5\n38      Men 2017             Daniel Wanjiru       Kenya     2       5      48\n39      Men 2018             Eliud Kipchoge       Kenya     2       4      17\n40      Men 2019             Eliud Kipchoge       Kenya     2       2      37\n43      Men 2022               Amos Kipruto       Kenya     2       4      39\n44      Men 2023              Kelvin Kiptum       Kenya     2       1      25\n47    Women 1983                Grete Waitz      Norway     2      25      29\n48    Women 1984         Ingrid Kristiansen      Norway     2      24      26\n49    Women 1985         Ingrid Kristiansen      Norway     2      21       6\n50    Women 1986                Grete Waitz      Norway     2      24      54\n51    Women 1987         Ingrid Kristiansen      Norway     2      22      48\n52    Women 1988         Ingrid Kristiansen      Norway     2      25      41\n56    Women 1992        Katrin Dörre-Heinig     Germany     2      29      39\n57    Women 1993        Katrin Dörre-Heinig     Germany     2      27       9\n58    Women 1994        Katrin Dörre-Heinig     Germany     2      32      34\n61    Women 1997           Joyce Chepchumba       Kenya     2      26      51\n63    Women 1999           Joyce Chepchumba       Kenya     2      23      22\n64    Women 2000              Tegla Loroupe       Kenya     2      24      33\n68    Women 2004             Margaret Okayo       Kenya     2      22      35\n72    Women 2008            Irina Mikitenko     Germany     2      24      14\n73    Women 2009            Irina Mikitenko     Germany     2      22      11\n75    Women 2011     Mary Jepkosgei Keitany       Kenya     2      19      19\n76    Women 2012     Mary Jepkosgei Keitany       Kenya     2      18      37\n77    Women 2013             Priscah Jeptoo       Kenya     2      20      15\n78    Women 2014              Edna Kiplagat       Kenya     2      20      21\n80    Women 2016             Jemima Sumgong       Kenya     2      22      58\n81    Women 2017     Mary Jepkosgei Keitany       Kenya     2      17       1\n82    Women 2018           Vivian Cheruiyot       Kenya     2      18      31\n83    Women 2019              Brigid Kosgei       Kenya     2      18      20\n84    Women 2020              Brigid Kosgei       Kenya     2      18      58\n85    Women 2021        Joyciline Jepkosgei       Kenya     2      17      43\n```\n:::\n:::\n\n\nBy the way, if we want to save our extracted data frame, we can assign it a new name (otherwise it will only get printed into the console, but you cant work further with it):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwinners_nat <- winners[winners$Nationality %in% c(\"Kenya\", \"Germany\", \"Norway\"), ]\nwinners_nat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Category Year                    Athlete Nationality Hours Minutes Seconds\n2       Men 1981        Inge Simonsen (Tie)      Norway    NA      11      48\n10      Men 1989          Douglas Wakiihuri       Kenya     2       9       3\n25      Men 2004                Evans Rutto       Kenya     2       6      18\n26      Men 2005                 Martin Lel       Kenya     2       7      35\n27      Men 2006                 Felix Limo       Kenya     2       6      39\n28      Men 2007                 Martin Lel       Kenya     2       7      41\n29      Men 2008                 Martin Lel       Kenya     2       5      15\n30      Men 2009             Samuel Wanjiru       Kenya     2       5      10\n32      Men 2011 Emmanuel Kipchirchir Mutai       Kenya     2       4      40\n33      Men 2012   Wilson Kipsang Kiprotich       Kenya     2       4      44\n35      Men 2014   Wilson Kipsang Kiprotich       Kenya    NA       4      29\n36      Men 2015             Eliud Kipchoge       Kenya     2       4      42\n37      Men 2016             Eliud Kipchoge       Kenya     2       3       5\n38      Men 2017             Daniel Wanjiru       Kenya     2       5      48\n39      Men 2018             Eliud Kipchoge       Kenya     2       4      17\n40      Men 2019             Eliud Kipchoge       Kenya     2       2      37\n43      Men 2022               Amos Kipruto       Kenya     2       4      39\n44      Men 2023              Kelvin Kiptum       Kenya     2       1      25\n47    Women 1983                Grete Waitz      Norway     2      25      29\n48    Women 1984         Ingrid Kristiansen      Norway     2      24      26\n49    Women 1985         Ingrid Kristiansen      Norway     2      21       6\n50    Women 1986                Grete Waitz      Norway     2      24      54\n51    Women 1987         Ingrid Kristiansen      Norway     2      22      48\n52    Women 1988         Ingrid Kristiansen      Norway     2      25      41\n56    Women 1992        Katrin Dörre-Heinig     Germany     2      29      39\n57    Women 1993        Katrin Dörre-Heinig     Germany     2      27       9\n58    Women 1994        Katrin Dörre-Heinig     Germany     2      32      34\n61    Women 1997           Joyce Chepchumba       Kenya     2      26      51\n63    Women 1999           Joyce Chepchumba       Kenya     2      23      22\n64    Women 2000              Tegla Loroupe       Kenya     2      24      33\n68    Women 2004             Margaret Okayo       Kenya     2      22      35\n72    Women 2008            Irina Mikitenko     Germany     2      24      14\n73    Women 2009            Irina Mikitenko     Germany     2      22      11\n75    Women 2011     Mary Jepkosgei Keitany       Kenya     2      19      19\n76    Women 2012     Mary Jepkosgei Keitany       Kenya     2      18      37\n77    Women 2013             Priscah Jeptoo       Kenya     2      20      15\n78    Women 2014              Edna Kiplagat       Kenya     2      20      21\n80    Women 2016             Jemima Sumgong       Kenya     2      22      58\n81    Women 2017     Mary Jepkosgei Keitany       Kenya     2      17       1\n82    Women 2018           Vivian Cheruiyot       Kenya     2      18      31\n83    Women 2019              Brigid Kosgei       Kenya     2      18      20\n84    Women 2020              Brigid Kosgei       Kenya     2      18      58\n85    Women 2021        Joyciline Jepkosgei       Kenya     2      17      43\n```\n:::\n:::\n\n\nWe can also combine multiple logical vectors using `&` (\"and\") and `|` (\"or\"). For example, we might want to look at all Kenyan winners before the year 2000:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwinners[winners$Nationality == \"Kenya\" & winners$Year < 2000, ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Category Year           Athlete Nationality Hours Minutes Seconds\n10      Men 1989 Douglas Wakiihuri       Kenya     2       9       3\n61    Women 1997  Joyce Chepchumba       Kenya     2      26      51\n63    Women 1999  Joyce Chepchumba       Kenya     2      23      22\n```\n:::\n:::\n\n\nOr at all women winners from Australia in the wheelchair category, and the male winners from the United States in the wheelchair category:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwinners[(winners$Category == \"Wheelchair Women\" & winners$Nationality == \"Australia\") | (winners$Category == \"Wheelchair Men\" & winners$Nationality == \"United States\"), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            Category Year            Athlete   Nationality Hours Minutes\n120   Wheelchair Men 2015        Josh George United States     1      31\n124   Wheelchair Men 2019   Daniel Romanchuk United States     1      33\n162 Wheelchair Women 2018 Madison de Rozario     Australia     1      42\n    Seconds\n120      31\n124      37\n162      58\n```\n:::\n:::\n\n\nIn the long run, always having to define the data frame multiple time in each row can become a bit annoying and clutters the code. Enter, the `filter()` function:\n\n### Tidyverse\n\nThe `dplyr` package is part of the `tidyverse` and provides a grammar of data manipulation. We can use `filter()` to subset rows from a data frame:\n\n::: tidy\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nfilter(winners, Nationality == \"Kenya\", Year < 2000)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Category Year           Athlete Nationality Hours Minutes Seconds\n1      Men 1989 Douglas Wakiihuri       Kenya     2       9       3\n2    Women 1997  Joyce Chepchumba       Kenya     2      26      51\n3    Women 1999  Joyce Chepchumba       Kenya     2      23      22\n```\n:::\n:::\n\n:::\n\nNote how we can just write our conditions without connecting them with `&` (`filter()` does that automatically for us). Also, we don't have to put the column names into `\"\"`, because `filter()` knows that this are column names of the `winners` data frame, which makes coding a bit more pleasant.\n\nFor extracting columns, we need `select()`:\n\n::: tidy\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(winners, Year, Athlete)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Year                    Athlete\n1   1981       Dick Beardsley (Tie)\n2   1981        Inge Simonsen (Tie)\n3   1982                 Hugh Jones\n4   1983               Mike Gratton\n5   1984           Charlie Spedding\n6   1985                Steve Jones\n7   1986             Toshihiko Seko\n8   1987           Hiromi Taniguchi\n9   1988           Henrik Jørgensen\n10  1989          Douglas Wakiihuri\n11  1990            Allister Hutton\n12  1991            Yakov Tolstikov\n13  1992              António Pinto\n14  1993              Eamonn Martin\n15  1994             Dionicio Cerón\n16  1995             Dionicio Cerón\n17  1996             Dionicio Cerón\n18  1997              António Pinto\n19  1998                 Abel Antón\n20  1999      Abdelkader El Mouaziz\n21  2000              António Pinto\n22  2001      Abdelkader El Mouaziz\n23  2002          Khalid Khannouchi\n24  2003            Gezahegne Abera\n25  2004                Evans Rutto\n26  2005                 Martin Lel\n27  2006                 Felix Limo\n28  2007                 Martin Lel\n29  2008                 Martin Lel\n30  2009             Samuel Wanjiru\n31  2010             Tsegaye Kebede\n32  2011 Emmanuel Kipchirchir Mutai\n33  2012   Wilson Kipsang Kiprotich\n34  2013             Tsegaye Kebede\n35  2014   Wilson Kipsang Kiprotich\n36  2015             Eliud Kipchoge\n37  2016             Eliud Kipchoge\n38  2017             Daniel Wanjiru\n39  2018             Eliud Kipchoge\n40  2019             Eliud Kipchoge\n41  2020          Shura Kitata Tola\n42  2021                Sisay Lemma\n43  2022               Amos Kipruto\n44  2023              Kelvin Kiptum\n45  1981                Joyce Smith\n46  1982                Joyce Smith\n47  1983                Grete Waitz\n48  1984         Ingrid Kristiansen\n49  1985         Ingrid Kristiansen\n50  1986                Grete Waitz\n51  1987         Ingrid Kristiansen\n52  1988         Ingrid Kristiansen\n53  1989            Véronique Marot\n54  1990               Wanda Panfil\n55  1991                  Rosa Mota\n56  1992        Katrin Dörre-Heinig\n57  1993        Katrin Dörre-Heinig\n58  1994        Katrin Dörre-Heinig\n59  1995        Małgorzata Sobańska\n60  1996               Liz McColgan\n61  1997           Joyce Chepchumba\n62  1998        Catherina McKiernan\n63  1999           Joyce Chepchumba\n64  2000              Tegla Loroupe\n65  2001               Derartu Tulu\n66  2002            Paula Radcliffe\n67  2003            Paula Radcliffe\n68  2004             Margaret Okayo\n69  2005            Paula Radcliffe\n70  2006               Deena Kastor\n71  2007               Zhou Chunxiu\n72  2008            Irina Mikitenko\n73  2009            Irina Mikitenko\n74  2010           Aselefech Mergia\n75  2011     Mary Jepkosgei Keitany\n76  2012     Mary Jepkosgei Keitany\n77  2013             Priscah Jeptoo\n78  2014              Edna Kiplagat\n79  2015                Tigist Tufa\n80  2016             Jemima Sumgong\n81  2017     Mary Jepkosgei Keitany\n82  2018           Vivian Cheruiyot\n83  2019              Brigid Kosgei\n84  2020              Brigid Kosgei\n85  2021        Joyciline Jepkosgei\n86  2022         Yalemzerf Yehualaw\n87  2023               Sifan Hassan\n88  1983               Gordon Perry\n89  1984                Kevin Breen\n90  1985               Chris Hallam\n91  1986             Gerry O'Rourke\n92  1987               Chris Hallam\n93  1988                  Ted Vince\n94  1989              David Holding\n95  1990             Håkan Ericsson\n96  1991            Farid Amarouche\n97  1992              Daniel Wesley\n98  1993            George Vandamme\n99  1994              David Holding\n100 1995                 Heinz Frei\n101 1996              David Holding\n102 1997              David Holding\n103 1998                 Heinz Frei\n104 1999                 Heinz Frei\n105 2000             Kevin Papworth\n106 2001            Denis Lemeunier\n107 2002                 David Weir\n108 2003               Joël Jeannot\n109 2004               Saúl Mendoza\n110 2005               Saúl Mendoza\n111 2006                 David Weir\n112 2007                 David Weir\n113 2008                 David Weir\n114 2009              Kurt Fearnley\n115 2010               Josh Cassidy\n116 2011                 David Weir\n117 2012                 David Weir\n118 2013              Kurt Fearnley\n119 2014                 Marcel Hug\n120 2015                Josh George\n121 2016                 Marcel Hug\n122 2017                 David Weir\n123 2018                 David Weir\n124 2019           Daniel Romanchuk\n125 2020              Brent Lakatos\n126 2021                 Marcel Hug\n127 1983               Denise Smith\n128 1984                Kay McShane\n129 1985                Kay McShane\n130 1986                Kay McShane\n131 1987             Karen Davidson\n132 1988             Karen Davidson\n133 1989            Josie Cichockyj\n134 1990              Connie Hansen\n135 1991              Connie Hansen\n136 1992        Tanni Grey-Thompson\n137 1993                  Rose Hill\n138 1994        Tanni Grey-Thompson\n139 1995                  Rose Hill\n140 1996        Tanni Grey-Thompson\n141 1997         Monica Wetterström\n142 1998        Tanni Grey-Thompson\n143 1999         Monica Wetterström\n144 2000               Sarah Piercy\n145 2001        Tanni Grey-Thompson\n146 2002        Tanni Grey-Thompson\n147 2003       Francesca Porcellato\n148 2004       Francesca Porcellato\n149 2005       Francesca Porcellato\n150 2006       Francesca Porcellato\n151 2007               Shelly Woods\n152 2008                Sandra Graf\n153 2009             Amanda McGrory\n154 2010            Wakako Tsuchida\n155 2011             Amanda McGrory\n156 2012               Shelly Woods\n157 2013           Tatyana McFadden\n158 2014           Tatyana McFadden\n159 2015           Tatyana McFadden\n160 2016           Tatyana McFadden\n161 2017              Manuela Schär\n162 2018         Madison de Rozario\n163 2019              Manuela Schär\n164 2020            Nikita den Boer\n165 2021              Manuela Schär\n```\n:::\n:::\n\n:::\n\n#### Remarks: the pipe operator\n\nHold on! Normally, we wouldn't write `tidyverse` code like that. Instead, we would use the pipe operator `%>%` (*than do*), which makes it easy to connect multiple function calls:\n\n::: tidy\n\n::: {.cell}\n\n```{.r .cell-code}\nwinners %>%\n  filter(Nationality == \"Kenya\", Year < 2000)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Category Year           Athlete Nationality Hours Minutes Seconds\n1      Men 1989 Douglas Wakiihuri       Kenya     2       9       3\n2    Women 1997  Joyce Chepchumba       Kenya     2      26      51\n3    Women 1999  Joyce Chepchumba       Kenya     2      23      22\n```\n:::\n:::\n\n:::\n\nHere, we first input the data frame we want to manipulate. Than we filter, as specified by the pipe operator. Like this, we can easily connect multiple function calls instead of nesting them within multiple brackets, which increases the readability:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwinners[winners$Year > 2000 & winners$Category == \"Women\", c(\"Category\", \"Year\")]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Category Year\n65    Women 2001\n66    Women 2002\n67    Women 2003\n68    Women 2004\n69    Women 2005\n70    Women 2006\n71    Women 2007\n72    Women 2008\n73    Women 2009\n74    Women 2010\n75    Women 2011\n76    Women 2012\n77    Women 2013\n78    Women 2014\n79    Women 2015\n80    Women 2016\n81    Women 2017\n82    Women 2018\n83    Women 2019\n84    Women 2020\n85    Women 2021\n86    Women 2022\n87    Women 2023\n```\n:::\n:::\n\n\nbecomes:\n\n::: tidy\n\n::: {.cell}\n\n```{.r .cell-code}\nwinners %>%\n  filter(Year > 2000, Category == \"Women\") %>%\n  select(Category, Year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Category Year\n1     Women 2001\n2     Women 2002\n3     Women 2003\n4     Women 2004\n5     Women 2005\n6     Women 2006\n7     Women 2007\n8     Women 2008\n9     Women 2009\n10    Women 2010\n11    Women 2011\n12    Women 2012\n13    Women 2013\n14    Women 2014\n15    Women 2015\n16    Women 2016\n17    Women 2017\n18    Women 2018\n19    Women 2019\n20    Women 2020\n21    Women 2021\n22    Women 2022\n23    Women 2023\n```\n:::\n:::\n\n:::\n\nMuch nicer to read, right?\n\nSome notes on this syntax: If we don't have any additional arguments we want to put into the function, we can just write the function name without any brackets. The pipe operator will give the result of the last function as input into the next function. If we want to clearly state which of the function arguments should receive the input, we can write a `.`, which can be read as *output of the previous function call*.\n\n## Vectors\n\nFinally, let's take a quick look at how to extract elements from a vector. It's pretty straight forward: we just put the position of the element we want to extract behind the vector in square brackets:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvec_athlete <- winners$Athlete # remember: `$` returns a vector\nvec_athlete[2]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Inge Simonsen (Tie)\"\n```\n:::\n:::\n\n\nOf course we can also do that for multiple elements:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvec_athlete[c(2, 3, 4)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Inge Simonsen (Tie)\" \"Hugh Jones\"          \"Mike Gratton\"       \n```\n:::\n\n```{.r .cell-code}\n## Or, less to write:\nvec_athlete[2:4]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Inge Simonsen (Tie)\" \"Hugh Jones\"          \"Mike Gratton\"       \n```\n:::\n:::\n\n\nAnother way would be to provide a logical vector, which defines for each position, if we want to extract the element or not (like we already did for data frames):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvec_athlete[c(rep(TRUE, 100), rep(FALSE, 65))]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"Dick Beardsley (Tie)\"       \"Inge Simonsen (Tie)\"       \n  [3] \"Hugh Jones\"                 \"Mike Gratton\"              \n  [5] \"Charlie Spedding\"           \"Steve Jones\"               \n  [7] \"Toshihiko Seko\"             \"Hiromi Taniguchi\"          \n  [9] \"Henrik Jørgensen\"           \"Douglas Wakiihuri\"         \n [11] \"Allister Hutton\"            \"Yakov Tolstikov\"           \n [13] \"António Pinto\"              \"Eamonn Martin\"             \n [15] \"Dionicio Cerón\"             \"Dionicio Cerón\"            \n [17] \"Dionicio Cerón\"             \"António Pinto\"             \n [19] \"Abel Antón\"                 \"Abdelkader El Mouaziz\"     \n [21] \"António Pinto\"              \"Abdelkader El Mouaziz\"     \n [23] \"Khalid Khannouchi\"          \"Gezahegne Abera\"           \n [25] \"Evans Rutto\"                \"Martin Lel\"                \n [27] \"Felix Limo\"                 \"Martin Lel\"                \n [29] \"Martin Lel\"                 \"Samuel Wanjiru\"            \n [31] \"Tsegaye Kebede\"             \"Emmanuel Kipchirchir Mutai\"\n [33] \"Wilson Kipsang Kiprotich\"   \"Tsegaye Kebede\"            \n [35] \"Wilson Kipsang Kiprotich\"   \"Eliud Kipchoge\"            \n [37] \"Eliud Kipchoge\"             \"Daniel Wanjiru\"            \n [39] \"Eliud Kipchoge\"             \"Eliud Kipchoge\"            \n [41] \"Shura Kitata Tola\"          \"Sisay Lemma\"               \n [43] \"Amos Kipruto\"               \"Kelvin Kiptum\"             \n [45] \"Joyce Smith\"                \"Joyce Smith\"               \n [47] \"Grete Waitz\"                \"Ingrid Kristiansen\"        \n [49] \"Ingrid Kristiansen\"         \"Grete Waitz\"               \n [51] \"Ingrid Kristiansen\"         \"Ingrid Kristiansen\"        \n [53] \"Véronique Marot\"            \"Wanda Panfil\"              \n [55] \"Rosa Mota\"                  \"Katrin Dörre-Heinig\"       \n [57] \"Katrin Dörre-Heinig\"        \"Katrin Dörre-Heinig\"       \n [59] \"Małgorzata Sobańska\"        \"Liz McColgan\"              \n [61] \"Joyce Chepchumba\"           \"Catherina McKiernan\"       \n [63] \"Joyce Chepchumba\"           \"Tegla Loroupe\"             \n [65] \"Derartu Tulu\"               \"Paula Radcliffe\"           \n [67] \"Paula Radcliffe\"            \"Margaret Okayo\"            \n [69] \"Paula Radcliffe\"            \"Deena Kastor\"              \n [71] \"Zhou Chunxiu\"               \"Irina Mikitenko\"           \n [73] \"Irina Mikitenko\"            \"Aselefech Mergia\"          \n [75] \"Mary Jepkosgei Keitany\"     \"Mary Jepkosgei Keitany\"    \n [77] \"Priscah Jeptoo\"             \"Edna Kiplagat\"             \n [79] \"Tigist Tufa\"                \"Jemima Sumgong\"            \n [81] \"Mary Jepkosgei Keitany\"     \"Vivian Cheruiyot\"          \n [83] \"Brigid Kosgei\"              \"Brigid Kosgei\"             \n [85] \"Joyciline Jepkosgei\"        \"Yalemzerf Yehualaw\"        \n [87] \"Sifan Hassan\"               \"Gordon Perry\"              \n [89] \"Kevin Breen\"                \"Chris Hallam\"              \n [91] \"Gerry O'Rourke\"             \"Chris Hallam\"              \n [93] \"Ted Vince\"                  \"David Holding\"             \n [95] \"Håkan Ericsson\"             \"Farid Amarouche\"           \n [97] \"Daniel Wesley\"              \"George Vandamme\"           \n [99] \"David Holding\"              \"Heinz Frei\"                \n```\n:::\n:::\n\n\n## Exercises\n\n1.  Load the `tutoR` package and start the exercise by typing the following code into your console:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlearnr::run_tutorial(name = \"subsetting\", package = \"tutoR\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}